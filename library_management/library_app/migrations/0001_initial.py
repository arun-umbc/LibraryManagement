# Generated by Django 4.0.3 on 2022-03-17 14:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import library_app.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('role', models.CharField(choices=[('SUPER_ADMIN', 'Super Admin'), ('STUDENT', 'Student'), ('LIBRARIAN', 'Librarian')], db_index=True, max_length=100)),
                ('first_name', models.CharField(blank=True, max_length=300, null=True)),
                ('last_name', models.CharField(blank=True, max_length=300, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', library_app.manager.AppUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('book_id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'book',
            },
        ),
        migrations.CreateModel(
            name='Fine',
            fields=[
                ('fine_id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('fine_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'fine',
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('request_id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('request_status', models.CharField(choices=[('SUPER_ADMIN', 'Super Admin'), ('STUDENT', 'Student'), ('LIBRARIAN', 'Librarian')], max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library_app.book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'request',
            },
        ),
        migrations.CreateModel(
            name='Reserve',
            fields=[
                ('reserve_id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('rented_date', models.DateTimeField(blank=True, null=True)),
                ('return_date', models.DateTimeField(blank=True, null=True)),
                ('returned_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library_app.book')),
                ('fine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library_app.fine')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library_app.request')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'reserve',
            },
        ),
        migrations.CreateModel(
            name='Renew',
            fields=[
                ('renew_id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('renewed_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reserve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library_app.reserve')),
            ],
            options={
                'db_table': 'renew',
            },
        ),
    ]
